	<section id="chap-quality" class="chapter">
		<h2>Quality Assessment</h2>
		<p>Independently of the (kinds of) source(s) from which a knowledge graph is created, data extracted for the initial knowledge graph will usually be incomplete, and will contain duplicate, contradictory or even incorrect statements – especially when taken from multiple sources. After the initial creation and enrichment of a knowledge graph from external sources, a crucial step is thus to assess the <em>quality</em> of the resulting knowledge graph. By quality, we here refer to <em>fitness for purpose</em>. Quality assessment then helps to ascertain for which purposes a knowledge graph can be reliability used.</p>
		<p>In the following we discuss <em>quality dimensions</em> that capture aspects of multifaceted data quality which evolves from the traditional domain of databases to the domain of knowledge graphs&nbsp;<? echo $references->cite("BatiniRSV15"); ?>, some of which are general, others of which are more particular to knowledge graphs&nbsp;<? echo $references->cite("ZaveriRMPLA16"); ?>. While quality dimensions aim to capture qualitative aspects of the data, we also discuss <em>quality metrics</em> that provide ways to measure quantitative aspects of these dimensions. We discuss groupings of dimensions and metrics as inspired by <? echo $references->citet("BatiniS16"); ?>.</p>

		<section id="ssec-accuracy" class="section">
		<h3>Accuracy</h3>
		<p>Accuracy refers to the extent to which entities and relations – encoded by nodes and edges in the graph – correctly represent real-life phenomena. Accuracy can be further sub-divided into three dimensions: <em>syntactic accuracy</em>, <em>semantic accuracy</em>, and <em>timeliness</em>.</p>

		<h4 id="sssec-syntactic-accuracy" class="subsection">Syntactic accuracy</h4>
		<p><strong>Syntactic accuracy</strong> is the degree to which the data are accurate with respect to the grammatical rules defined for the domain and/or data model. A prevalent example of syntactic inaccuracies occurs with datatype nodes, which may be incompatible with a defined range or be malformed. For example, assuming that a property <span class="gelab">start</span> is defined with the range <code>xsd:dateTime</code>, taking a value such as <span class="gnode">"<code>March&nbsp;29,&nbsp;2019,&nbsp;20:00</code>"^^xsd:string</span> would be incompatible with the defined range, while a value <span class="gnode">"<code>March&nbsp;29,&nbsp;2019,&nbsp;20:00</code>"^^xsd:dateTime</span> would be malformed (a value such as <span class="gnode">"<code>2019-11-12T20:00:00</code>"^^xsd:dateTime</span> is rather expected). A corresponding metric for syntactic accuracy is the ratio between the number of incorrect values of a given property and the total number of values for the same property&nbsp;<? echo $references->cite("ZaveriRMPLA16"); ?>. Such forms of syntactic accuracy can typically be assessed using validation tools&nbsp;<? echo $references->cite("Furber,Hogan"); ?>.</p>

		<h4 id="sssec-semantic-accuracy" class="subsection">Semantic accuracy</h4>
		<p><strong>Semantic accuracy</strong> is the degree to which data values correctly represent real world phenomena, which may be affected by imprecise extraction results, imprecise entailments, vandalism, etc. For instance, given that the National Congress of Chile is located in Valparaíso, this may give rise to the edge <? echo gedge("Chile","capital","Valparaiso"); ?> (through entailment, extraction, completion, etc.), which is in fact semantically inaccurate: the Chilean capital is Santiago. Assessing the level of semantic inaccuracies is challenging. While one option is to apply manual verification, an automatic option may be to check the stated relation against several sources&nbsp;<? echo $references->cite("Lei,EstevesRRL18"); ?>. Another option is to rather validate the quality of individual processes used to generate the knowledge graph, based on measures such as precision, possibly with the help of human experts or gold standards&nbsp;<? echo $references->cite("IESW"); ?>.</p>

		<h4 id="sssec-timeliness" class="subsection">Timeliness</h4>
		<p><strong>Timeliness</strong> is the degree to which the knowledge graph is currently up-to-date with the real world state&nbsp;<? echo $references->cite("KaferAUOH13"); ?>; in other words, a knowledge graph may be semantically accurate now, but may quickly become inaccurate (outdated) if no procedures are in place to keep it up-to-date in a timely manner. For example, consider a user checking the tourist knowledge graph for flights from one city to another. Suppose that the flight timetable is updated every minute with current flight statuses, but the knowledge graph is only updated every hour. In this case, we see that there is a quality issue regarding timeliness in the knowledge graph. Timeliness can be assessed based on how frequently the knowledge graph is updated with respect to underlying sources&nbsp;<? echo $references->cite("KaferAUOH13,RulaPPM14"); ?>, which can be done using temporal annotations of changes in the knowledge graph&nbsp;<? echo $references->cite("RulaPHSM12,RulaPRNLME19"); ?>, as well as contextual representations that capture the temporal validity of data (see Section&nbsp;<? echo ref("ssec:knowledgeContext"); ?>).</p>
		</section>

		<section id="sssec-coverage" class="section">
		<h3>Coverage</h3>
		<p>Coverage refers to avoiding the omission of domain-relevant elements, which otherwise may yield incomplete query results or entailments, biased models, etc.</p>
		
		<h4 id="sssec-completeness" class="subsection">Completeness</h4>
		<p><strong>Completeness</strong> refers to the degree to which all required information is present in a particular dataset. Completeness comprises the following aspects: (i) <em>schema completeness</em> refers to the degree to which the classes and properties of a schema are represented in the data graph, (ii) <em>property completeness</em> refers to the ratio of missing values for a specific property, (iii) <em>population completeness</em> provides the percentage of all real-world entities of a particular type that are represented in the datasets, and (iv) <em>linkability completeness</em> refers to the degree to which instances in the data set are interlinked. Measuring completeness directly is non-trivial as it requires knowledge of a hypothetical <em>ideal knowledge graph</em>&nbsp;<? echo $references->cite("DarariNPR18"); ?> that contains all the elements that the knowledge graph in question should “<em>ideally</em>” represent. Concrete strategies involve comparison with gold standards that provide samples of the ideal knowledge graph (possibly based on <em>completeness statements</em>&nbsp;<? echo $references->cite("DarariNPR18"); ?>), or measuring the recall of extraction methods from complete sources&nbsp;<? echo $references->cite("IESW"); ?>, and so forth.</p>

		<h4 id="sssec-representativeness" class="subsection">Representativeness</h4>
		<p><strong>Representativeness</strong> is a related dimension that, instead of focusing on the ratio of domain-relevant elements that are missing, rather focuses on assessing high-level <em>biases</em> in what is included/excluded from the knowledge graph&nbsp;<? echo $references->cite("Baeza-Yates18"); ?>. As such, this dimension assumes that the knowledge graph is incomplete – i.e., that it is a sample of the ideal knowledge graph – and asks how biased this sample is. Biases may occur in the data, in the schema, or during reasoning&nbsp;<? echo $references->cite("Janowicz0RZM18"); ?>. Examples of data biases include geographic biases that under-represent entities/relations from certain parts of the world&nbsp;<? echo $references->cite("Janowicz0RZM18"); ?>, linguistic biases that under-represent multilingual resources (e.g., labels and descriptions) for certain languages&nbsp;<? echo $references->cite("KaffeePVSCP17"); ?>, social biases that under-represent people of particular genders or races&nbsp;<? echo $references->cite("WagnerGGM16"); ?>, and so forth. In contrast, schema biases may result from high-level definitions extracted from biased data&nbsp;<? echo $references->cite("Janowicz0RZM18"); ?>, semantic definitions that do not cover uncommon cases, etc. Unrecognised biases may lead to adverse effects; for example, if our tourism knowledge graph has a geographic bias towards events and attractions close to Santiago city – due perhaps to the sources used for creation, the employment of curators from the city, etc. – then this may lead to tourism in and around Santiago being disproportionally promoted (potentially compounding future biases). Measures of representativeness involve comparison of known statistical distributions with those of the knowledge graph, for example, comparing geolocated entities with known population densities&nbsp;<? echo $references->cite("Janowicz0RZM18"); ?>, linguistic distributions with known distributions of speakers&nbsp;<? echo $references->cite("KaffeePVSCP17"); ?>, etc. Another option is to compare the knowledge graph with general statistical laws, where <? echo $references->citet("SouletGMS18"); ?> use (non-)conformance with Benford’s law<? echo footnote("Benford’s law states that the leading significant digit in many collections of numbers is more likely to be small."); ?> to measure representativeness in knowledge graphs.</p>
		</section>

		<section id="ssec-coherency" class="section">
		<h3>Coherency</h3>
		<p>Coherency refers to how well the knowledge graph conforms to – or is coherent with – the formal semantics and constraints defined at the schema-level.</p>

		<h4 id="sssec-consistency" class="subsection">Consistency</h4>
		<p><strong>Consistency</strong> means that a knowledge graph is free of (logical/formal) contradictions with respect to the particular logical entailment considered. For example, in the ontology of our knowledge graph, we may define that <? echo gedge("flight","range","Airport"); ?><? echo esource(); ?><span class="edge">disj.&nbsp;c.</span><? echo etipr(); ?><span class="gnode">City</span>, which when combined with the edges <? echo gedge("Arica","flight","Santiago"); ?><? echo esource(); ?><span class="edge">type</span><? echo etipr(); ?><span class="gnode">City</span>, gives rise to an inconsistency, entailing that <span class="gnode">Santiago</span> is a member of the disjoint classes <span class="gnode">City</span> and <span class="gnode">Airport</span>. More generally, any semantic feature in Tables&nbsp;<? echo ref("tab:ontEqIneq"); ?>–<? echo ref("tab:ontClass"); ?> with a “not” condition can give rise to inconsistencies if the negated condition is entailed. A measure of consistency can be the number of inconsistencies found in a knowledge graph, possibly sub-divided into the number of such inconsistencies identified by each semantic feature&nbsp;<? echo $references->cite("BonattiHPS11"); ?>.</p>

		<h4 id="sssec-validity" class="subsection">Validity</h4>
		<p><strong>Validity</strong> means that the knowledge graph is free of constraint violations, such as captured by shape expressions&nbsp;<? echo $references->cite("ThorntonSSGMPW19"); ?> (see Section&nbsp;<? echo ref("sssec:validating-schema"); ?>. We may, for example, specify a shape <span class="shap">City</span> whose target nodes have at most one country. Then, given the edges <span class="gnode">Chile</span><? echo etipl(); ?><span class="edge">country</span><? echo esource(); ?><? echo gedge("Santiago","country","Cuba"); ?>, and assuming that <span class="gnode">Santiago</span> becomes a target of <span class="shap">City</span>, we have a constraint violation. Conversely, even if we defined analogous cardinality restrictions in an ontology, this would not necessarily cause an inconsistency since, without UNA, we would first infer that <span class="gnode">Chile</span> and <span class="gnode">Cuba</span> refer to the same entity. A straightforward measure of validity is to count the number of violations per constraint.</p>
		</section>

		<section id="ssec-succinctness" class="section">
		<h3>Succinctness</h3>
		<p>Succinctness refers to the inclusion only of relevant content (avoiding “information overload”) that is represented in a concise and intelligible manner.</p>

		<h4 id="sssec-conciseness" class="subsection">Conciseness</h4>
		<p><strong>Conciseness</strong> refers to avoiding the inclusion of schema and data elements that are irrelevant to the domain. <? echo $references->citet("MendesMB12"); ?> distinguish <em>intensional conciseness</em> (schema level), which refers to the case when the data does not contain redundant schema elements (properties, classes, shapes, etc.), and <em>extensional conciseness</em> (data level), when the data does not contain redundant entities and relations. For example, including events in <span class="gnode">Santiago&nbsp;de&nbsp;Cuba</span> in our knowledge graph dedicated to tourism in Chile may affect the extensional conciseness of the knowledge graph, potentially returning irrelevant results for the given domain. In general, conciseness can be measured in terms of the ratio of properties, classes, shapes, entities, relations, etc., of relevance to the domain, which may in turn require a gold standard, or techniques to assess domain-relevance.</p>

		<h4 id="sssec-representational-conciseness" class="subsection">Representational-conciseness</h4>
		<p><strong>Representational-consieness</strong> refers to the extent to which content is compactly represented in the knowledge graph, which may again be intensional or extensional&nbsp;<? echo $references->cite("ZaveriRMPLA16"); ?>. For example, having two properties <span class="gelab">flight</span> and <span class="gelab">flies&nbsp;to</span> serving the same purpose would negatively affect the intensional form of representational conciseness, while having two nodes <span class="gnode">Santiago</span> and <span class="gnode">Santiago&nbsp;de&nbsp;Chile</span> representing the capital of Chile (with neither linked to the other) would affect the extensional form of representational conciseness. Another example of representational conciseness is the unnecessary use of complex modelling constructs, such as using reification unnecessarily, or using linked lists when the order of elements is not important&nbsp;<? echo $references->cite("HoganUHCPD12"); ?>. Though representational conciseness is challenging to assess, measures such as the number of redundant nodes can be used&nbsp;<? echo $references->cite("Furber"); ?>.</p>

		<h4 id="sssec-understandability" class="subsection">Understandability</h4>
		<p><strong>Understandability</strong> refers to the ease with which data can be interpreted without ambiguity by human users, which involves – at least – the provision of human-readable labels and descriptions (preferably in different languages&nbsp;<? echo $references->cite("KaffeePVSCP17"); ?>) that allow them to understand what is being spoken about&nbsp;<? echo $references->cite("HoganUHCPD12"); ?>. Referring back to Figure&nbsp;<? echo ref("fig:delg"); ?>, though the nodes <span class="gnode">EID15</span> and <span class="gnode">EID16</span> are used to ensure unique identifiers for events, they should also be associated with labels such as <span class="gnode">Ñam</span> and <span class="gnode">Food&nbsp;Truck</span>. Ideally the human readable information is sufficient to disambiguate a particular node, such as associating a description <span class="gnode">"Santiago,&nbsp;the&nbsp;capital&nbsp;of&nbsp;Chile"@en</span> with <span class="gnode">Santiago</span> to disambiguate the city from synonymous ones. Measures of understandability may include the ratio of nodes with human-readable labels and descriptions, the uniqueness of such labels and descriptions, the languages supported, etc.</p>
		</section>

		<section id="ssec-other-quality" class="section">
		<h3>Other Quality Dimensions</h3>
		<p>We have discussed some key quality dimensions that have been discussed for – and apply generally to – knowledge graphs. Further dimensions may be pertinent in the context of specific domains, specific applications, or specific graph data models. For further details, we refer to the survey by <? echo $references->citet("ZaveriRMPLA16"); ?> and to the book by <? echo $references->citet("BatiniS16"); ?>.</p>
		</section>
	</section>
