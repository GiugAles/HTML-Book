	<section id="chap-quality" class="chapter">
		<h2>Quality Assessment</h2>
		<p>Independently of the (kinds of) source(s) from which a knowledge graph is created, the resulting initial knowledge graph will usually be incomplete, and will often contain duplicate, contradictory or even incorrect statements, especially when taken from multiple sources. After the initial creation and enrichment of a knowledge graph from external sources, a crucial step is thus to assess the <em>quality</em> of the resulting knowledge graph. By quality, we here refer to <em>fitness for purpose</em>. Quality assessment then helps to ascertain for which purposes a knowledge graph can be reliably used. Take, for instance, the sample of an initial knowledge graph created by the tourist board shown in Figure&nbsp;<?php echo ref("fig:bad"); ?>. Is this knowledge graph of good quality? Does it exhibit issues that might limit the applications for which it is fit for purpose? Can we define and detect such issues? These questions are crucial to address before the knowledge graph is deployed, but they are also challenging to address in a general way.</p>

		<figure id="fig-bad">
			<img src="images/fig-bad.svg" alt="A newly created knowledge graph about events and their venues"/>
			<figcaption>A newly created knowledge graph about events and their venues <a class="git" title="Consult the code for this example on Github" href="https://github.com/Knowledge-Graphs-Book/examples/blob/main/Chapter_7_Quality_Assessment/figure_7_1.ttl"></a></figcaption>
		</figure>

		<p>This chapter discusses (sometimes overlapping) <em>quality dimensions</em> that capture qualitative aspects of the multifaceted notion of data quality; some of these dimensions apply more generally to databases&nbsp;<?php echo $references->cite("BatiniRSV15"); ?>, while others are more specific to knowledge graphs&nbsp;<?php echo $references->cite("ZaveriRMPLA16"); ?>. We further discuss <em>quality metrics</em> that provide ways to measure quantitative aspects of these dimensions. We group dimensions and metrics in a manner inspired by <?php echo $references->citet("BatiniS16"); ?>.</p>

		<section id="ssec-accuracy" class="section">
		<h3>Accuracy</h3>
		<p><em>Accuracy</em> refers to the extent to which entities and relations – encoded by nodes and edges in the graph – correctly represent real-life phenomena. Accuracy can be divided into three dimensions: <em>syntactic accuracy</em>, <em>semantic accuracy</em>, and <em>timeliness</em>.</p>

		<h4 id="sssec-syntactic-accuracy" class="subsection">Syntactic accuracy</h4>
		<p><em>Syntactic accuracy</em> is the degree to which the data are accurate with respect to the grammatical rules defined for the domain and/or data model. A prevalent example of syntactic inaccuracy occurs with datatype nodes, which may be incompatible with a defined range or be malformed. For example, assuming that a property <span class="gelab">start</span> is defined with the range <code>xsd:dateTime</code>, the value <span class="gnode">March&nbsp;29,&nbsp;2019</span> in Figure&nbsp;<?php echo ref("fig:bad"); ?> would be incompatible with the defined range, while a value <span class="gnode">&apos;March&nbsp;29,&nbsp;2019,&nbsp;20:00&apos;^^xsd:dateTime</span> would be malformed (a value such as <span class="gnode">&apos;2019-03-22T20:00:00&apos;^^xsd:dateTime</span> is rather expected). A corresponding metric for syntactic accuracy is the ratio between the number of invalid values of a given property and the total number of values for the same property&nbsp;<?php echo $references->cite("ZaveriRMPLA16"); ?>. Such forms of syntactic accuracy can typically be assessed using validation tools&nbsp;<?php echo $references->cite("Furber,Hogan"); ?>.</p>

		<h4 id="sssec-semantic-accuracy" class="subsection">Semantic accuracy</h4>
		<p><em>Semantic accuracy</em> is the degree to which data values correctly represent real-world phenomena, which may be affected by imprecise extraction results, untrustworthy sources, vandalism, etc. For instance, in Figure&nbsp;<?php echo ref("fig:bad"); ?>, the start of the <span class="gnode">EID15</span> event comes after the end of the event, possibly due to a typo in the year. While such a case could potentially be identified using, for example, shape-based validation, other cases might be more difficult to detect; for example, if we were to accidentally (and incorrectly) swap the venues for <span class="gnode">EID15</span> and <span class="gnode">EID17</span>, there might be no indication whatsoever in the knowledge graph that the venues are incorrect, even if we have additional schemata/ontologies/rules available. Assessing the level of semantic inaccuracy is challenging. While one option is to apply manual verification, an automatic option may be to check the stated relation against several sources&nbsp;<?php echo $references->cite("Lei,EstevesRRL18"); ?>. An alternative is to validate the quality of the processes used to generate the knowledge graph, based on measures such as precision, possibly with the help of human experts or gold standards&nbsp;<?php echo $references->cite("IESW"); ?>.</p>

		<h4 id="sssec-timeliness" class="subsection">Timeliness</h4>
		<p><em>Timeliness</em> is the degree to which the knowledge graph is kept up-to-date with the real world state&nbsp;<?php echo $references->cite("KaferAUOH13"); ?>. A knowledge graph may be semantically accurate now, but may quickly become inaccurate (outdated) if no procedures are in place to keep it up-to-date in a timely manner. Considering Figure&nbsp;<?php echo ref("fig:bad"); ?>, the events appear to be from years ago, and if not updated, then the knowledge graph will not be suitable for applications that wish to recommend upcoming events to users. Additionally, the meaning of some values in the graph, such as <span class="gnode">Next&nbsp;Tuesday</span> or <span class="gnode">Next&nbsp;Thursday</span> (which may have been extracted from the text of a news article, for example), will change over time, and become semantically inaccurate in the future. Similarly, the age of Santiago will quickly become outdated, where instead representing the year that the city was founded would facilitate timeliness. Timeliness can be assessed based on how frequently the knowledge graph is updated with respect to underlying sources&nbsp;<?php echo $references->cite("KaferAUOH13,RulaPPM14"); ?>, which can be done using temporal annotations of changes in the knowledge graph&nbsp;<?php echo $references->cite("RulaPHSM12,RulaPRNLME19"); ?>, as well as contextual representations that capture the temporal validity of data (see Section&nbsp;<?php echo ref("ssec:knowledgeContext"); ?>).</p>
		</section>

		<section id="sssec-coverage" class="section">
		<h3>Coverage</h3>
		<p>Coverage refers to avoiding the omission of domain-relevant elements, which otherwise may yield incomplete query results or entailments, biased models, etc.</p>
		
		<h4 id="sssec-completeness" class="subsection">Completeness</h4>
		<p><em>Completeness</em> refers to the degree to which all required information is present in a particular dataset. Completeness comprises the following aspects: (i) <em>schema completeness</em> refers to the degree to which the classes and properties of a schema are represented in the data graph, (ii) <em>property completeness</em> refers to the ratio of missing values for a specific property, (iii) <em>population completeness</em> refers to the percentage of all real-world entities of a particular type that are represented in the datasets, and (iv) <em>linkability completeness</em> refers to the degree to which instances in the data set are interlinked. Taking some examples from Figure&nbsp;<?php echo ref("fig:bad"); ?>, the lack of information about the fare for <span class="gnode">EID15</span> might be seen as a form of property incompleteness, while missing events held in Chile around the same time might lead to population incompleteness. Measuring completeness is non-trivial as it assumes knowledge of a hypothetical <em>ideal knowledge graph</em>&nbsp;<?php echo $references->cite("DarariNPR18"); ?> that contains all the elements that the knowledge graph in question <em>should</em> have. Concrete strategies may involve comparison with gold standards that provide samples of the ideal knowledge graph (possibly based on <em>completeness statements</em>&nbsp;<?php echo $references->cite("DarariNPR18"); ?>), or measuring the recall of extraction methods from complete sources&nbsp;<?php echo $references->cite("IESW"); ?>.</p>

		<h4 id="sssec-representativeness" class="subsection">Representativeness</h4>
		<p><em>Representativeness</em> is a related dimension that, instead of focusing on the ratio of domain-relevant elements that are missing, rather focuses on assessing high-level <em>biases</em> in what is included/excluded from the knowledge graph&nbsp;<?php echo $references->cite("Baeza-Yates18"); ?>. As such, this dimension assumes that the knowledge graph is incomplete – i.e., that it is a sample of the ideal knowledge graph – and asks how biased this sample is. Biases may occur in the data, in the schema, or during reasoning&nbsp;<?php echo $references->cite("Janowicz0RZM18"); ?>. Examples of data biases include geographic biases that under-represent entities/relations from certain parts of the world&nbsp;<?php echo $references->cite("Janowicz0RZM18"); ?>, linguistic biases that under-represent multilingual resources (e.g., labels and descriptions) for certain languages&nbsp;<?php echo $references->cite("KaffeePVSCP17"); ?>, social biases that under-represent people of particular genders or races&nbsp;<?php echo $references->cite("WagnerGGM16"); ?>, and so forth. In contrast, schema biases may result from high-level definitions extracted from biased data&nbsp;<?php echo $references->cite("Janowicz0RZM18"); ?>, semantic definitions that do not cover uncommon cases, etc. Unrecognised biases may lead to adverse effects; for example, if the knowledge graph of Figure&nbsp;<?php echo ref("fig:bad"); ?> has a geographic bias towards events and attractions close to Santiago city – due perhaps to the sources used for creation, the employment of curators from the city, etc. – then this may lead to tourism in and around Santiago being disproportionately promoted to the detriment of tourism elsewhere in Chile. Measures of representativeness may involve comparing known statistical distributions with those of the knowledge graph, for example, comparing geolocated entities with known population densities&nbsp;<?php echo $references->cite("Janowicz0RZM18"); ?>, linguistic distributions with known distributions of speakers&nbsp;<?php echo $references->cite("KaffeePVSCP17"); ?>, etc. Another more general option is to compare the knowledge graph with general statistical laws, where <?php echo $references->citet("SouletGMS18"); ?> use (non-)conformance with Benford’s law<?php echo footnote("Benford’s law states that the leading significant digit in many collections of numbers is more likely to be small."); ?> to measure representativeness in knowledge graphs.</p>
		</section>

		<section id="ssec-coherency" class="section">
		<h3>Coherency</h3>
		<p><em>Coherency</em> refers to how well the knowledge graph conforms to – or is coherent with – the formal semantics and constraints defined at the schema-level.</p>

		<figure id="fig-badOnt">
			<img src="images/fig-badOnt.svg" alt="An ontology for the knowledge graph of Figure&nbsp;7.1"/>
			<figcaption>An ontology for the knowledge graph of Figure&nbsp;<?php echo ref("fig:bad"); ?> <a class="git" title="Consult the code for this example on Github" href="https://github.com/Knowledge-Graphs-Book/examples/blob/main/Chapter_7_Quality_Assessment/7_3_Coherency/figure_7_2.ttl"></a></figcaption>
		</figure>

		<h4 id="sssec-consistency" class="subsection">Consistency</h4>
		<p><em>Consistency</em> means that a knowledge graph is free of contradictions (i.e., inconsistencies) with respect to the particular logical entailment considered. For example, if we apply the entailments defined in Table&nbsp;<?php echo ref("tab:ontEqIneq"); ?> over the graph of Figure&nbsp;<?php echo ref("fig:bad"); ?>, we see that the edge <?php echo gedge("Santiago&nbsp;de&nbsp;Chile","same&nbsp;as","Santiago&nbsp;de&nbsp;Cuba"); ?> is inferred from both entities being the same as <span class="gnode">Santiago</span>, which generates an inconsistency with the edge <?php echo gedge("Santiago&nbsp;de&nbsp;Chile","diff.&nbsp;from","Santiago&nbsp;de&nbsp;Cuba"); ?> as stated in the graph. While in this case it is evident that <?php echo gedge("Santiago&nbsp;de&nbsp;Cuba","same&nbsp;as","Santiago"); ?> is semantically inaccurate (considering that the venues connected to <span class="gnode">Santiago</span> are in Chile), in other cases there may not be an obvious inaccuracy. Take, for example, the ontology defined in Figure&nbsp;<?php echo ref("fig:badOnt"); ?>, combined with the graph of Figure&nbsp;<?php echo ref("fig:bad"); ?>, and the ontological entailments of Tables&nbsp;<?php echo ref("tab:ontEqIneq"); ?>–<?php echo ref("tab:ontClass"); ?>. Noting that the food festival <span class="gnode">EID15</span> offers a takeaway service, according to the ontology, this entails that <span class="gnode">EID15</span> is a restaurant, a building, and a place, which is disjoint with event. However, <span class="gnode">EID15</span> is also entailed to be a festival, and then an event, generating an inconsistency. In this case there is no clear individual “error” leading to an inconsistency. Possibly the graph of Figure&nbsp;<?php echo ref("fig:bad"); ?> should not use the property <span class="gelab">service</span> for a food event (though it seems a “good fit”), or perhaps the ontology of Figure&nbsp;<?php echo ref("fig:badOnt"); ?> should not define the domain of the property <span class="gelab">service</span> to be a restaurant. Any ontological features in Tables&nbsp;<?php echo ref("tab:ontEqIneq"); ?>–<?php echo ref("tab:ontClass"); ?> with a “not” condition can give rise to inconsistencies if the negated condition is entailed. A measure of consistency can be the number of inconsistencies found in a knowledge graph, possibly sub-divided into the number of such inconsistencies identified by each semantic feature&nbsp;<?php echo $references->cite("BonattiHPS11"); ?>.</p>

		<h4 id="sssec-validity" class="subsection">Validity</h4>
		<p><em>Validity</em> means that the knowledge graph is free of constraint violations, such as captured by shape expressions&nbsp;<?php echo $references->cite("ThorntonSSGMPW19"); ?> (see Section&nbsp;<?php echo ref("sssec:validating-schema"); ?>). We may, for example, specify a shape <span class="shap">City</span> whose target nodes have at most one country. Then, taking the edges <span class="gnode">Chile</span><?php echo etipl(); ?><span class="edge">country</span><?php echo esource(); ?><?php echo gedge("Santiago","country","Cuba"); ?> from Figure&nbsp;<?php echo ref("fig:bad"); ?>, and assuming that <span class="gnode">Santiago</span> becomes a target of <span class="shap">City</span>, we have a constraint violation. Conversely, even if we defined analogous cardinality restrictions in an ontology (e.g., even if we defined that <span class="gelab">country</span> was functional), this would not necessarily cause an inconsistency since, without UNA, we would first infer that <span class="gnode">Chile</span> and <span class="gnode">Cuba</span> refer to the same entity. Similarly, using shapes, we can more easily detect missing data; for example, we can define a shape <span class="shap">Event</span>, and require that it have at least one value for the property <span class="gelab">fare</span>. Now, if <span class="gnode">EID15</span> becomes targetted by <span class="shap">Event</span>, then we will have a constraint violation as the node has no value for <span class="gelab">fare</span>. Conversely, even if we defined analogous cardinality restrictions in an ontology (e.g., we defined that events have a minimum cardinality of 1 for <span class="gelab">fare</span>), this would not cause an inconsistency since, under the OWA, we would rather entail that the event <span class="ginode">EID15</span> has some fair (that is not described in the graph). Consistency and validity can thus indicate different types of issues. A straightforward measure of validity is to count the number of violations per constraint.</p>
		</section>

		<section id="ssec-succinctness" class="section">
		<h3>Succinctness</h3>
		<p><em>Succinctness</em> refers to the inclusion only of relevant content (avoiding “information overload”) that is represented in a concise and intelligible manner.</p>

		<h4 id="sssec-conciseness" class="subsection">Conciseness</h4>
		<p><em>Conciseness</em> refers to avoiding schema and data elements that are irrelevant to the domain. <?php echo $references->citet("MendesMB12"); ?> distinguish <em>intensional conciseness</em> (schema level), which refers to the case when the data do not contain redundant schema elements (properties, classes, shapes, etc.), and <em>extensional conciseness</em> (data level), where the data do not describe redundant entities and relations. For example, the inclusion of a property and class for modelling jurisdictions and legal entities in the ontology of Figure&nbsp;<?php echo ref("fig:badOnt"); ?> may affect the intensional conciseness of the ontology in the context of a knowledge graph about tourist events. Similarly, the inclusion of data about <span class="gnode">Santiago&nbsp;de&nbsp;Cuba</span> in our knowledge graph dedicated to tourism in Chile may affect the extensional conciseness of the knowledge graph, potentially returning irrelevant results for the given domain. In general, conciseness can be measured in terms of the ratio of properties, classes, shapes, entities, relations, etc., of relevance to the domain, which may in turn require a gold standard, or measures of domain-relevance.</p>

		<h4 id="sssec-representational-conciseness" class="subsection">Representational conciseness</h4>
		<p><em>Representational conciseness</em> refers to the extent to which content is compactly represented in the knowledge graph, which may again be intensional or extensional&nbsp;<?php echo $references->cite("ZaveriRMPLA16"); ?>. For example, having two properties <span class="gelab">category</span> and <span class="gelab">type</span> serving the same purpose would negatively affect the intensional form of representational conciseness, while having two nodes <span class="gnode">Santiago</span> and <span class="gnode">Santiago&nbsp;de&nbsp;Chile</span> that split the data available about the capital of Chile would affect the extensional form of representational conciseness. Another example of poor representational conciseness is the unnecessary use of complex modelling constructs, such as using reification unnecessarily, or using linked lists when the order of elements is not important&nbsp;<?php echo $references->cite("HoganUHCPD12"); ?>. An example of this is the anonymous node used in Figure&nbsp;<?php echo ref("fig:bad"); ?> to represent the days on which <span class="gnode">EID17</span> starts and ends, which could rather be directly associated with the event (at least if we assume that events have one start and one end moment in time). A different example is the specification of the duration of <span class="gnode">EID15</span>, which could be calculated from the start and end values (assuming the correct datatypes were used). Though representational conciseness is challenging to assess, measures such as the number of redundant nodes can be used&nbsp;<?php echo $references->cite("Furber"); ?>.</p>

		<h4 id="sssec-understandability" class="subsection">Understandability</h4>
		<p><em>Understandability</em> refers to the ease with which data can be interpreted without ambiguity by human users, which involves – at least – the provision of human-readable labels and descriptions (preferably in different languages&nbsp;<?php echo $references->cite("KaffeePVSCP17"); ?>) that allow such beings to understand what is being spoken about&nbsp;<?php echo $references->cite("HoganUHCPD12"); ?>. Referring back to Figure&nbsp;<?php echo ref("fig:bad"); ?>, though the nodes <span class="gnode">EID15</span> and <span class="gnode">EID17</span> are used to ensure unique identifiers for events, they should also be associated with labels, such as <span class="gnode">Ñam</span>. Ideally the human readable information is sufficient to disambiguate a particular node, such as associating a description <span class="gnode">"Santiago,&nbsp;the&nbsp;capital&nbsp;of&nbsp;Chile"@en</span> with <span class="gnode">Santiago</span> to disambiguate the city from synonymous ones. Measures of understandability may include the ratio of nodes with human-readable labels and descriptions, the uniqueness of such labels and descriptions, the languages supported, etc.</p>
		</section>

		<section id="ssec-other-quality" class="section">
		<h3>Other Quality Dimensions</h3>
		<p>The list of quality dimensions provided here should be considered illustrative rather than complete. Further dimensions may be pertinent in the context of specific domains, applications, or graph data models. For more discussion, we refer to the survey by <?php echo $references->citet("ZaveriRMPLA16"); ?> and to the book by <?php echo $references->citet("BatiniS16"); ?>.</p>
		</section>
	</section>
